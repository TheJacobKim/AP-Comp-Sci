/**
 * A program to carry on conversations with a human user.
 * Based on program written by @author Laurie White
 * Updated by Ms. Thompson November 2016
 */
public class Magpie
{
	/**
	 * Get a default greeting 	
	 * @return a greeting
	 */
	public String getGreeting()
	{
		return "Hello, let's talk.";
	}
	
	/**
	 * Gives a response to a user statement
	 * @param statement is the user statement 
	 * @return a response based on the rules given
	 */
	public String getResponse(String statement)
	{
		String response = "";
		if(findKeyword(statement, "no") >= 0)
			response = "Why so negative?";
		
		else if(findKeyword(statement, "cat") >= 0 ||findKeyword(statement, "dog") >= 0 ||findKeyword(statement, "bat") >= 0 ||findKeyword(statement, "pig") >= 0 ||findKeyword(statement, "cow") >= 0)
			response = "I love animals!";
		
		else if(findKeyword(statement, "family") >= 0 ||findKeyword(statement, "mother") >= 0 ||findKeyword(statement, "father") >= 0 ||findKeyword(statement, "brother") >= 0 ||findKeyword(statement, "sister") >= 0 ||findKeyword(statement, "aunt") >= 0 ||findKeyword(statement, "uncle") >= 0 ||findKeyword(statement, "cousin") >= 0)
			response = "Tell me more about your family";
		
		else if(findKeyword(statement, "pray") >= 0 ||findKeyword(statement, "temple") >= 0 ||findKeyword(statement, "angel") >= 0 ||findKeyword(statement, "god") >= 0 ||findKeyword(statement, "church") >= 0)
			response = "Do you believe in God?";
		
		else if(findKeyword(statement, "yes") >= 0 ||findKeyword(statement, "happy") >= 0 ||findKeyword(statement, "love") >= 0)
			response = "I like your positivity!";
		
		else if(findKeyword(statement, "hate") >= 0)
			response = "Hate is a strong word.";
		
		else if(findKeyword(statement, "tennis") >= 0 ||findKeyword(statement, "bowling") >= 0 ||findKeyword(statement, "football") >= 0 ||findKeyword(statement, "baseball") >= 0 ||findKeyword(statement, "basketball") >= 0 ||findKeyword(statement, "soccer") >= 0)
			response = "I love sports!";
		else
		{
			response = getRandomResponse();
		}
		
		return response;
	}

	/**
	 * Pick a default response to use if nothing else fits.
	 * @return a non-committal string
	 */
	private String getRandomResponse()
	{
		int i = (int) (4*Math.random()+1);
		String response = "";
		if(i==1)
			response = "It sounds interesting! Tell me more.";
		if(i==2)
			response = "How's your life?";
		if(i==3)
			response = "Your responses are being monitored by FBI.";
		if(i==4)
			response = "Tell me something interesting.";
		return response;
	}
	
	
	//FOR USE IN ACTIVITY 3
	/**
	 * Search for one word in phrase, making sure it's not part of another word. 
	 * 
	 * @param statement is the string to search
	 * @param goal is the string to search for
	 * @param startPos is the character of the string to begin the search at
	 * @return the index of the first occurrence of goal in statement or -1 if it's not found
	 */
	private int findKeyword(String statement, String goal)
	{	
		statement = statement.trim().toLowerCase();
		goal = goal.toLowerCase();
		String after;
		String before;
		//
		if (statement.contains(goal))
		{
			if (statement.equals(goal))
				return statement.indexOf(goal);
			else if (statement.indexOf(goal) == 0)
			{
				after = statement.substring(statement.indexOf(goal) + goal.length(), statement.indexOf(goal) + goal.length() + 1);
				if(((after.compareTo("a") < 0 || after.compareTo("z") > 0)))
					return statement.indexOf(goal);
				else 
					return -1;
			}
			else if (statement.endsWith(goal))
			{
				before = statement.substring(statement.indexOf(goal) - 1, statement.indexOf(goal));
				if(((before.compareTo("a") < 0 || before.compareTo("z") > 0)))
					return statement.indexOf(goal);
				else 
					return -1;
			}
			else
			{
				before = statement.substring(statement.indexOf(goal) - 1, statement.indexOf(goal));
				after = statement.substring(statement.indexOf(goal) + goal.length(), statement.indexOf(goal) + goal.length() + 1);
			
				if(((before.compareTo("a") < 0 || before.compareTo("z") > 0)) && ((after.compareTo("a") < 0 || after.compareTo("z") > 0)))
					return statement.indexOf(goal);
				else 
					return -1;
			}
		}
		else 
			return -1;
	}
	
	
	//FOR USE IN ACTIVITY 4
	/**
	 * Take a statement with "I want to <something>." and transform it into 
	 * "What would it mean to <something>?"
	 * @param statement the user statement, assumed to contain "I want to"
	 * @return the transformed statement
	 */
	//private String transformIWantToStatement(String statement)
	{
		
	}
	
	
	//FOR USE IN ACTIVITY 4
	/**
	 * Take a statement with "I want <something>." and transform it into 
	 * "Would you really be happy if you had <something>?"
	 * @param statement the user statement, assumed to contain "I want"
	 * @return the transformed statement
	 */
	//private String transformIWantStatement(String statement)
	{
		
	}
}
